(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{369:function(e,t,o){"use strict";o.r(t);var i=o(42),a=Object(i.a)({},(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("h1",{attrs:{id:"contribution-template"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#contribution-template"}},[e._v("#")]),e._v(" Contribution Template")]),e._v(" "),o("blockquote",[o("p",[e._v("A brief sentence describing the goal of the article")])]),e._v(" "),o("p",[e._v("Notebooks should be named by their sections as well as a topic. Such as how this one is "),o("code",[e._v("01_intro")]),e._v(" (for introduction section) "),o("code",[e._v(".contribute")]),e._v(" (as it's the contribution guide). Another example would be "),o("code",[e._v("02_vision.classification.single_label")])]),e._v(" "),o("p",[e._v("In the very first part of your notebook you should denote the "),o("code",[e._v("fastai")]),e._v(" and "),o("code",[e._v("fastcore")]),e._v(" versions, as well as any other library used. I have a cookie-cutter cell below. Simply call "),o("RouterLink",{attrs:{to:"/utils.html#state_versions"}},[o("code",[e._v("state_versions")])]),e._v(" with a list of your libraries being used and it will display them in "),o("code",[e._v("Markdown")]),e._v(".")],1),e._v(" "),o("p",[e._v("Ensure you have a "),o("code",[e._v("#hide_input")]),e._v(" comment above the function call so the documentation looks clean.")]),e._v(" "),o("hr"),e._v(" "),o("p",[e._v("This article is also a Jupyter Notebook available to be run from the top down. There will be code snippets that you can then run in any environment. Below are the versions of "),o("code",[e._v("fastai")]),e._v(" "),o("code",[e._v("fastcore")]),e._v("  currently running at the time of writing this:")]),e._v(" "),o("ul",[o("li",[o("code",[e._v("fastai")]),e._v(": 2.0.14")]),e._v(" "),o("li",[o("code",[e._v("fastcore")]),e._v(": 1.0.11")])]),e._v(" "),o("hr"),e._v(" "),o("p",[e._v("From here you should denote sections with two ##, walking users through your problem or example you are showing:")]),e._v(" "),o("h2",{attrs:{id:"my-problem"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#my-problem"}},[e._v("#")]),e._v(" My Problem")]),e._v(" "),o("p",[e._v("My problem is "),o("code",[e._v("x")]),e._v(", below we will try to solve "),o("code",[e._v("x")]),e._v(" using "),o("code",[e._v("y")]),e._v(". (No need for verbatum, be as creative as you would like to be!)")]),e._v(" "),o("p",[e._v("Ideally if you are walking through an implementation, at the end show an example of how to perform both batch and single input predictions. (see "),o("code",[e._v("vision.classification.single_label")]),e._v(" for an example)")]),e._v(" "),o("h2",{attrs:{id:"submitting-a-pr"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#submitting-a-pr"}},[e._v("#")]),e._v(" Submitting a PR")]),e._v(" "),o("p",[e._v("Once you've written your notebook, simply submit your PR to "),o("a",{attrs:{href:"https://github.com/walkwithfastai/walkwithfastai.github.io",target:"_blank",rel:"noopener noreferrer"}},[e._v("the repo"),o("OutboundLink")],1),e._v(" and I will review it!")])])}),[],!1,null,null,null);t.default=a.exports}}]);